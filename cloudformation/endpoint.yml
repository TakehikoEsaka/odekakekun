AWSTemplateFormatVersion: "2010-09-09"
Description: Create Endpoint

Parameters:
  VpcId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>
    Default: /odekakekun-values/VPCId

  # Interfaceタイプ用
  PrivateSubnetAId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>
    Default: /odekakekun-values/PrivateSubnetAId

  PrivateSubnetCId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>
    Default: /odekakekun-values/PrivateSubnetCId

  # Gatewayタイプ用
  PrivateRouteTableA:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /odekakekun-values/PrivateRouteTableA

  PrivateRouteTableC:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /odekakekun-values/PrivateRouteTableC

Resources:
  ########################################################
  ### Security Group for ECS Service
  ########################################################
  VPCEndpointSecurityGroupId:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Endpoint Security Group
      VpcId: !Ref VpcId
      GroupName: vpc-endpoint-security-group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          # TODO private netの数字に合わせておく
          CidrIp: 10.1.100.0/24
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          # TODO private netの数字に合わせておく
          CidrIp: 10.1.200.0/24

  # TODO 必要なエンドポイントとつけるべき場所を特定する
  ########################################################
  ### Endpoints
  ########################################################
  EC2VPCEndpointEcrDkr:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: "Interface"
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ecr.dkr"
      PolicyDocument: |
        {
          "Statement": [
            {
              "Action": "*", 
              "Effect": "Allow", 
              "Principal": "*", 
              "Resource": "*"
            }
          ]
        }
      SubnetIds:
        - !Ref PrivateSubnetAId
        - !Ref PrivateSubnetCId
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroupId

  EC2VPCEndpointS3:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: "Gateway"
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      PolicyDocument: |
        {
          "Statement": [
            {
              "Action": "*", 
              "Effect": "Allow", 
              "Principal": "*", 
              "Resource": "*"
            }
          ]
        }
      RouteTableIds:
        - !Ref PrivateRouteTableA
        - !Ref PrivateRouteTableC

      # ここはInterface型の時のみ指定出来るパラメータでGatewayの時は指定しない
      # SubnetIds:
      #   - !Ref PrivateSubnetAId
      #   - !Ref PrivateSubnetCId
      # PrivateDnsEnabled: false
      # SecurityGroupIds:
      #   - !Ref VPCEndpointSecurityGroupId

  EC2VPCEndpointEcrApi:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: "Interface"
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ecr.api"
      PolicyDocument: |
        {
          "Statement": [
            {
              "Action": "*", 
              "Effect": "Allow", 
              "Principal": "*", 
              "Resource": "*"
            }
          ]
        }
      SubnetIds:
        - !Ref PrivateSubnetAId
        - !Ref PrivateSubnetCId
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroupId

  EC2VPCEndpointSecretsManager:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: "Interface"
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.secretsmanager"
      PolicyDocument: |
        {
          "Statement": [
            {
              "Action": "*", 
              "Effect": "Allow", 
              "Principal": "*", 
              "Resource": "*"
            }
          ]
        }
      SubnetIds:
        - !Ref PrivateSubnetAId
        - !Ref PrivateSubnetCId
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroupId

  EC2VPCEndpointLogs:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: "Interface"
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.logs"
      PolicyDocument: |
        {
          "Statement": [
            {
              "Action": "*", 
              "Effect": "Allow", 
              "Principal": "*", 
              "Resource": "*"
            }
          ]
        }
      SubnetIds:
        - !Ref PrivateSubnetAId
        - !Ref PrivateSubnetCId
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroupId

  EC2VPCEndpointRds:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: "Interface"
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.rds"
      PolicyDocument: |
        {
          "Statement": [
            {
              "Action": "*", 
              "Effect": "Allow", 
              "Principal": "*", 
              "Resource": "*"
            }
          ]
        }
      SubnetIds:
        - !Ref PrivateSubnetAId
        - !Ref PrivateSubnetCId
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroupId

  EC2VPCEndpointMonitoring:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: "Interface"
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.monitoring"
      PolicyDocument: |
        {
          "Statement": [
            {
              "Action": "*", 
              "Effect": "Allow", 
              "Principal": "*", 
              "Resource": "*"
            }
          ]
        }
      SubnetIds:
        - !Ref PrivateSubnetAId
        - !Ref PrivateSubnetCId
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroupId

  # 以下はEC2の場合は必要。Fargateの場合は必要なし
  # EC2VPCEndpointEcsAgent:
  #   Type: "AWS::EC2::VPCEndpoint"
  #   Properties:
  #     VpcEndpointType: "Interface"
  #     VpcId: !Ref VpcId
  #     ServiceName: !Sub "com.amazonaws.${AWS::Region}.ecs-agent"
  #     PolicyDocument: |
  #       {
  #         "Statement": [
  #           {
  #             "Action": "*",
  #             "Effect": "Allow",
  #             "Principal": "*",
  #             "Resource": "*"
  #           }
  #         ]
  #       }
  #     SubnetIds:
  #       - !Ref PrivateSubnetAId
  #       - !Ref PrivateSubnetCId
  #     PrivateDnsEnabled: true
  #     SecurityGroupIds:
  #       - !Ref VPCEndpointSecurityGroupId

  # EC2VPCEndpointEcsTelemetry:
  #   Type: "AWS::EC2::VPCEndpoint"
  #   Properties:
  #     VpcEndpointType: "Interface"
  #     VpcId: !Ref VpcId
  #     ServiceName: !Sub "com.amazonaws.${AWS::Region}.ecs-telemetry"
  #     PolicyDocument: |
  #       {
  #         "Statement": [
  #           {
  #             "Action": "*",
  #             "Effect": "Allow",
  #             "Principal": "*",
  #             "Resource": "*"
  #           }
  #         ]
  #       }
  #     SubnetIds:
  #       - !Ref PrivateSubnetAId
  #       - !Ref PrivateSubnetCId
  #     PrivateDnsEnabled: true
  #     SecurityGroupIds:
  #       - !Ref VPCEndpointSecurityGroupId

  # EC2VPCEndpointEcs:
  #   Type: "AWS::EC2::VPCEndpoint"
  #   Properties:
  #     VpcEndpointType: "Interface"
  #     VpcId: !Ref VpcId
  #     ServiceName: !Sub "com.amazonaws.${AWS::Region}.ecs"
  #     PolicyDocument: |
  #       {
  #         "Statement": [
  #           {
  #             "Action": "*",
  #             "Effect": "Allow",
  #             "Principal": "*",
  #             "Resource": "*"
  #           }
  #         ]
  #       }
  #     SubnetIds:
  #       - !Ref PrivateSubnetAId
  #       - !Ref PrivateSubnetCId
  #     PrivateDnsEnabled: true
  #     SecurityGroupIds:
  #       - !Ref VPCEndpointSecurityGroupId

  # ECS EXEC用
  EndpointSSM:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: "Interface"
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ssm"
      PolicyDocument: |
        {
          "Statement": [
            {
              "Action": "*", 
              "Effect": "Allow", 
              "Principal": "*", 
              "Resource": "*"
            }
          ]
        }
      SubnetIds:
        - !Ref PrivateSubnetAId
        - !Ref PrivateSubnetCId
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroupId

  EndpointSSMMessages:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: "Interface"
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ssmmessages"
      PolicyDocument: |
        {
          "Statement": [
            {
              "Action": "*", 
              "Effect": "Allow", 
              "Principal": "*", 
              "Resource": "*"
            }
          ]
        }
      SubnetIds:
        - !Ref PrivateSubnetAId
        - !Ref PrivateSubnetCId
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroupId

  EndpointEC2Messages:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      VpcEndpointType: "Interface"
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.ec2messages"
      PolicyDocument: |
        {
          "Statement": [
            {
              "Action": "*", 
              "Effect": "Allow", 
              "Principal": "*", 
              "Resource": "*"
            }
          ]
        }
      SubnetIds:
        - !Ref PrivateSubnetAId
        - !Ref PrivateSubnetCId
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref VPCEndpointSecurityGroupId
