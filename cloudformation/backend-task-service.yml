# TODO AutoScaleを入れれたら入れておく
# TODO RDBのセットアップ
# TODO テンプレートをまとめる（参考：https://github.com/aws-samples/startup-kit-templates/blob/master/vpc-bastion-fargate.cfn.yml

AWSTemplateFormatVersion: "2010-09-09"
Description: Create ECS BackEnd Task & Service
Parameters:
  # 値をコンソールから受付け
  ECSBackEndServiceName:
    Type: String
    Default: "odekakekun-backend-service"

  ECSBackEndTaskName:
    Type: String
    Default: "odekakekun-backend-task"

  ECSBackEndContainerName:
    Type: String
    Default: "odekakekun-backend-container"

  ECSBackEndImageName:
    Type: String
    Default: "xxxxxxxxxxxx.dkr.ecr.ap-northeast-1.amazonaws.com/odekakekun-backend"

  # SSMから取得
  PrivateSubnetAId:
    # SSMで受け取る側はAWSのデータ型に合わせる
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>
    Default: /odekakekun-values/PrivateSubnetAId

  PrivateSubnetCId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>
    Default: /odekakekun-values/PrivateSubnetCId

  ## Service Discovery用に用意
  VpcId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>
    Default: /odekakekun-values/VPCId

  ECSCluster:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /odekakekun-values/ECSCluster

  ECSLogGroup:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /odekakekun-values/ECSLogGroup

  ECSTaskExecutionRole:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /odekakekun-values/ECSTaskExecutionRole

  ECSSecurityGroupId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::SecurityGroup::Id>
    Default: /odekakekun-values/ECSSecurityGroupId

Resources:
  # BackEnd
  ########################################################
  ###  Service Discovery for BackEnd Service
  ########################################################
  PrivateDnsNamespace:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Vpc: !Ref VpcId
      Name: "odekakekun-network"

  ServiceDiscovery:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      HealthCheckCustomConfig:
        FailureThreshold: 1
      DnsConfig:
        DnsRecords:
          - Type: A
            TTL: 60
        NamespaceId: !GetAtt PrivateDnsNamespace.Id
      Name: "service-discovery"

  ########################################################
  ###  ECS BackEnd TaskDefinition
  ########################################################
  ECSBackEndTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Cpu: 512
      TaskRoleArn: !Ref ECSTaskExecutionRole
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      Family: !Ref ECSBackEndTaskName
      Memory: 1024
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: !Ref ECSBackEndContainerName
          Image: !Ref ECSBackEndImageName
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref ECSLogGroup
              # AWSの既に定義されてる環境変数のようなものを引っ張ってこれる
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: odekakekun
          MemoryReservation: 128
          PortMappings:
            - HostPort: 80
              Protocol: tcp
              ContainerPort: 80

  ########################################################
  ###  ECS BackEnd ServieDefinition
  ########################################################
  ECSBackendService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      EnableExecuteCommand: true # ECS-EXEC用
      DesiredCount: 1
      LaunchType: FARGATE
      PlatformVersion: "1.4.0"
      #BKはサービスディスカバリを通じてFRONTとやりとりする
      ServiceRegistries:
        - RegistryArn: !GetAtt ServiceDiscovery.Arn
      # BKはALBとは直接通信しない
      # LoadBalancers:
      #   - TargetGroupArn: !Ref TargetGroup
      #     ContainerPort: 80
      #     ContainerName: !Ref ECSBackEndContainerName
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref ECSSecurityGroupId
          Subnets:
            - !Ref PrivateSubnetAId
            - !Ref PrivateSubnetCId
      ServiceName: !Ref ECSBackEndServiceName
      TaskDefinition: !Ref ECSBackEndTaskDefinition

  ########################################################
  ###  Postgres Database
  ########################################################
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS Security Group
      VpcId: !Ref VpcId
      GroupName: rds-security-group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          # TODO private netの数字に合わせておく
          CidrIp: 10.1.100.0/24
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          # TODO private netの数字に合わせておく
          CidrIp: 10.1.200.0/24

  PostgresDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBSecurityGroups:
        - !Ref RDSSecurityGroup
      AllocatedStorage: "20"
      DBInstanceClass: db.t4g.micro
      Engine: postgres
      MasterUsername: postgres
      MasterUserPassword: postgres-password
